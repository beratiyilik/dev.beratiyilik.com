version: 2.1

orbs:
  node: circleci/node@4.7

node_modules_cache_key: &node_modules_cache_key node_modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}

default_config: &default_config
  docker:
    - image: cimg/node:16.10
#  environment:
#    JEST_WORKERS: 2

commands:
  save_node_modules:
    steps:
      - save_cache:
          key: *node_modules_cache_key
          paths:
            - ./node_modules
  restore_node_modules:
    steps:
      - restore_cache:
          key: *node_modules_cache_key
  ensure_ahead_of_main:
    steps:
      - run:
          name: Ensure branch is ahead of main
          command: |
            git fetch origin main;
            if ! git merge-base --is-ancestor origin/main HEAD;
            then
            printf '\n\n ** Your branch must be ahead of main to deploy **\n\n';
            exit 1;
            fi
  set-custom-environment-variable:
    parameters:
      value:
        default: "default-value"
        type: string
    steps:
      - run:
          name: "Set custom environment variable"
          command: |
            echo 'export CUSTOM_ENV_VAR="<<parameters.value>>"' >> "$BASH_ENV"
            source $BASH_ENV
jobs:
  install_dependencies:
    <<: *default_config
    steps:
      - add_ssh_keys
      - run: 
          name: Installing OS packages
          command: sudo apt-get -y update && sudo apt install rsync
      - checkout
      - restore_node_modules
      - node/install-packages:
          pkg-manager: npm
      - save_node_modules
  lint:
    <<: *default_config
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Lint
          command: npm run lint
  check_types:
    <<: *default_config
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Check types
          command: echo "Check types will be implemented!"
  unit_tests:
    <<: *default_config
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Run unit tests
          command: npm run test
  integration_tests:
    <<: *default_config
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Run integration tests
          command: npm run test
  acceptance_tests:
    <<: *default_config
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Run acceptance tests
          command: npm run test
  build:
    <<: *default_config
    parameters:
      access-key:
        type: env_var_name
        default: AWS_ACCESS_KEY
      command:
        type: string
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Build
          command: |
            << parameters.command >>
            npm run build
  deploy:
    <<: *default_config
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: deploy.sh
          command: sh .circleci/deploy.sh

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - install_dependencies

      - lint:
         requires:
          - install_dependencies
      - check_types:
          requires:
            - install_dependencies

      - unit_tests:
          requires:
            - lint
            - check_types
      - integration_tests:
          requires:
            - lint
            - check_types
      - acceptance_tests:
          requires:
            - lint
            - check_types

      - build:
          access-key: AWS_ACCESS_KEY
          command: echo "BUILDING WHAT!!!"
          requires:
            - unit_tests
            - integration_tests
            - acceptance_tests

      - approve_dev:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: dev
      - deploy:
          name: Dev Deploy
          requires:
            - approve_dev

      - approve_prod:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: main
      - deploy:
          name: Prod Deploy
          requires:
            - approve_prod